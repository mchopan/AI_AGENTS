# -*- coding: utf-8 -*-
"""loop.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p2u8S-eykbA9NoeoiiV0r9go9YhvEhNk
"""

from typing import TypedDict, List
from langgraph.graph import StateGraph, START, END
import random

class AgentState(TypedDict):
  name: str
  number: List[int]
  counter: int

def greeting(state: AgentState) -> AgentState:
  """This node will greet a person"""
  state["name"] = f"Hey {state['name']} How are you"
  state["counter"] = 0
  return state

def random_node(state: AgentState) -> AgentState:
  state["counter"] = state["counter"] + 1
  state["number"].append(random.randint(0, 100))
  return state

def check_condition(state: AgentState) -> bool:
  if state["counter"] < 5:
    return "continue"
  else:
    return "exit"

builder = StateGraph(AgentState)

builder.add_node("greeting", greeting)
builder.add_node("random_node", random_node)

builder.add_edge(START, "greeting")
builder.add_edge("greeting", "random_node")

builder.add_conditional_edges(
    "random_node",
    check_condition,
    {
        "continue" : "random_node",
        "exit" : END
    }
)


app = builder.compile()

from IPython.display import Image, display
display(Image(app.get_graph().draw_mermaid_png()))

initial_state = AgentState(name="John", number=[], counter=0)

result = app.invoke(initial_state)
print(result)